[
    {
        "Soru Numarası": 1,
        "Soru": "Derleme ve yorum arasındaki fark nedir?",
        "Cevap": "Derleme, kaynak kodunu makine koduna çevirir, yürütülebilir bir dosya oluşturur. Yorum, yürütülebilir bir şekilde kod satır satır çevirir ve yürütür.",
        "Kategori": "Genel Programlama",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 2,
        "Soru": "Polimorfizm kavramını açıklayın.",
        "Cevap": "Polimorfizm, farklı sınıfların nesnelerinin ortak bir üst sınıfın nesneleri olarak ele alınmasına izin vererek yöntemin geçersiz kılınmasını sağlar.",
        "Kategori": "Genel Programlama",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 3,
        "Soru": "Kapsülleme tanımlayın ve bir örnek verin.",
        "Cevap": "Kapsülleme, doğrudan veri erişimini kısıtlayarak bir sınıftaki verileri ve yöntemleri bir araya getirir. Örnek: Özel veriler ve genel yöntemlerle sınıf.",
        "Kategori": "Genel Programlama",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 4,
        "Soru": "Soyut bir sınıf nedir ve bir arayüzden nasıl farklıdır?",
        "Cevap": "Soyut bir sınıf başlatılamaz ve soyut ve somut yöntemlere sahip olabilir. Bir arayüzün yalnızca uygulama olmadan yöntem imzaları vardır.",
        "Kategori": "Genel Programlama",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 5,
        "Soru": "Nesneye yönelik programlama (OOP) ilkelerini tanımlayın.",
        "Cevap": "OOP prensipleri, organize ve sürdürülebilir kodu teşvik eden kapsülleme, kalıtım, polimorfizm ve soyutlamayı içerir.",
        "Kategori": "Genel Programlama",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 6,
        "Soru": "Bir kurucunun amacı nedir?",
        "Cevap": "Bir yapıcı, iyi tanımlanmış bir durum sağlayarak sınıfın en iyi hale getirilmesi üzerine nesne özelliklerini başlatır.",
        "Kategori": "Genel Programlama",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 7,
        "Soru": "Yığın ve yığın belleği arasındaki farkı açıklayın.",
        "Cevap": "Stack bellek yerel değişkenleri ve işlev çağrılarını depolar; Yığın belleği dinamik tahsis içindir. Stack LIFO'da çalışır, yığın manuel olarak veya çöp toplama ile çalışır.",
        "Kategori": "Genel Programlama",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 8,
        "Soru": "Tasarım deseni nedir ve birkaçını adlandırabilir misiniz?",
        "Cevap": "Tasarım kalıpları yaygın tasarım problemlerine çözümdür. Örnekler: Singleton, Fabrika, Gözlemci, MVC.",
        "Kategori": "Genel Programlama",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 9,
        "Soru": "Yazılım geliştirmede \"kuru\" terimini tanımlayın.",
        "Cevap": "Mevcut kodu yeniden kullanarak kod çoğaltılmasından kaçınmak için kuru (kendinizi tekrarlamayın) savunucuları.",
        "Kategori": "Genel Programlama",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 10,
        "Soru": "Sağlam prensip nedir?",
        "Cevap": "Katı OOP için beş tasarım ilkesini temsil eder: tek sorumluluk, açık/kapalı, Liskov ikamesi, arayüz ayrımı, bağımlılık ters çevirme.",
        "Kategori": "Genel Programlama",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 11,
        "Soru": "Bir dizi ve bağlantılı bir liste arasındaki fark nedir?",
        "Cevap": "Bir dizi sabit boyuta sahiptir ve öğeleri bitişik bellekte depolar; Bağlantılı bir liste, dinamik boyuta izin veren veri ve referanslara sahip düğümlerden oluşur.",
        "Kategori": "Veri Yapıları",
        "Zorluk": "Kolay"
    },
    {
        "Soru Numarası": 12,
        "Soru": "Bir algoritmanın zaman karmaşıklığını açıklayın.",
        "Cevap": "Zaman karmaşıklığı, bir algoritmanın giriş boyutuna göre aldığı süreyi ölçer, büyük O gösteriminde ifade edilir.",
        "Kategori": "Veri Yapıları",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 13,
        "Soru": "Bir ikili arama ağacı ve bir karma tablo arasındaki farkı açıklayın.",
        "Cevap": "İkili bir arama ağacı hiyerarşiktir, düzeni korur; Bir karma tablo, sırayı korumadan hızlı alma için değerlerle eşleştirir.",
        "Kategori": "Veri Yapıları",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 14,
        "Soru": "Bağlı bir liste nedir ve nasıl çalışır?",
        "Cevap": "Bağlantılı liste, her biri veri içeren bir dizi düğüm ve bir sonraki düğüme referans, dinamik bellek tahsisi ve verimli ekleme/silme işlemine izin veren bir dizidir.",
        "Kategori": "Veri Yapıları",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 15,
        "Soru": "Özyineleme kavramını açıklayın.",
        "Cevap": "Özyineleme, bir fonksiyonun kendisini alt problemleri çözmek için çağırdığı ve özyinelemeyi sonlandırmak için temel bir durumdur.",
        "Kategori": "Veri Yapıları",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 16,
        "Soru": "Big O Notation nedir ve neden önemlidir?",
        "Cevap": "Big O Notation, verimlilik ve büyüme oranlarının karşılaştırılması için önemli olan algoritma zaman karmaşıklığının üst sınırını tanımlar.",
        "Kategori": "Veri Yapıları",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 17,
        "Soru": "Sıralı bir dizide ikili arama nasıl yaparsınız?",
        "Cevap": "İkili arama, orta elemanı hedefle tekrar tekrar karşılaştırarak arama aralığını ikiye bölür.",
        "Kategori": "Veri Yapıları",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 18,
        "Soru": "Farklı sıralama algoritmalarının avantajlarını ve dezavantajlarını tartışın.",
        "Cevap": "Sıralama algoritmaları zaman/boşluk karmaşıklığı ve istikrarına göre değişir. Hızlı sıralama ve birleştirme türü hızlı ancak daha karmaşıktır; Ekleme ve kabarcık türü basit ama daha yavaş.",
        "Kategori": "Veri Yapıları",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 19,
        "Soru": "Bir karma tablonun nasıl çalıştığını açıklayın.",
        "Cevap": "Bir karma tablo, anahtarları bir dizideki değerlerle eşleştirmek için bir karma işlevi kullanır ve hızlı O (1) erişimine izin verir.",
        "Kategori": "Veri Yapıları",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 20,
        "Soru": "Dinamik programlama nedir?",
        "Cevap": "Dinamik programlama, karmaşık problemleri daha küçük alt problemlere bölerek çözer ve gereksiz hesaplamalardan kaçınır.",
        "Kategori": "Veri Yapıları",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 21,
        "Soru": "Java ve JavaScript arasındaki fark nedir?",
        "Cevap": "Java, sunucu tarafı, mobil ve masaüstü uygulamaları için kullanılan derlenmiş, statik olarak yazılmış bir dildir. JavaScript, web geliştirme için yorumlanmış, dinamik olarak yazılmış bir dildir.",
        "Kategori": "Diller ve çerçeveler",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 22,
        "Soru": "MVC mimari modelini tanımlayın.",
        "Cevap": "MVC, bir uygulamayı, endişelerin ayrılmasını teşvik ederek model (veriler), görünüm (UI) ve denetleyiciye (giriş işleme) ayırır.",
        "Kategori": "Diller ve çerçeveler",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 23,
        "Soru": "RESTful API nedir?",
        "Cevap": "Restful API, kaynaklar üzerinde CRUD işlemleri gerçekleştirmek için HTTP yöntemlerini kullanan ve vatansız, müşteri sunucusu mimarisine bağlı bir web hizmeti uygulamasıdır.",
        "Kategori": "Diller ve çerçeveler",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 24,
        "Soru": "JavaScript'te \"Bu\" anahtar kelimesinin kullanımını açıklayın.",
        "Cevap": "JavaScript'teki \"bu\", işlev çağrısına, küresel kapsamı veya olay işleyicilerine göre değişen yürütme bağlamını ifade eder.",
        "Kategori": "Diller ve çerçeveler",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 25,
        "Soru": "Programlamada kapanış nedir?",
        "Cevap": "Kapatma, dış işlev yürütüldükten sonra bile dış kapsam değişkenlerine erişimi olan bir işlevdir.",
        "Kategori": "Diller ve çerçeveler",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 26,
        "Soru": "Python 2 ve Python 3 arasındaki farklar nelerdir?",
        "Cevap": "Python 3, Python 2'nin aksine bir işlev, gerçek bölüm, varsayılan olarak Unicode desteği ve istisnalar için farklı sözdizim olarak yazdırmaya sahiptir.",
        "Kategori": "Diller ve çerçeveler",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 27,
        "Soru": "NPM veya PIP gibi bir paket yöneticisinin rolünü tartışın.",
        "Cevap": "Paket yöneticileri, kütüphanelerin kurulumu, güncellenmesini ve bağımlılık çözünürlüğünü yöneterek geliştirme sırasında kütüphane yönetimini basitleştirir.",
        "Kategori": "Diller ve çerçeveler",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 28,
        "Soru": "Java'da çoklu iş parçacığı kavramını açıklayın.",
        "Cevap": "Java'da çoklu iş parçacığı, birden fazla iş parçacığının eşzamanlı olarak yürütülmesine izin vererek uygulama duyarlılığını ve performansı artırır.",
        "Kategori": "Diller ve çerçeveler",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 29,
        "Soru": "Singleton deseni nedir?",
        "Cevap": "Singleton, bir sınıfın yalnızca bir örneğe sahip olmasını sağlar ve paylaşılan kaynaklar için kullanışlı olan küresel bir erişim noktası sağlar.",
        "Kategori": "Diller ve çerçeveler",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 30,
        "Soru": "C ++ 'da sanal işlev nedir?",
        "Cevap": "C ++ 'daki sanal fonksiyonlar, türetilmiş sınıfların bunları geçersiz kılmasına izin vererek çalışma zamanı polimorfizmini ve dinamik yöntem gönderilmesini sağlar.",
        "Kategori": "Diller ve çerçeveler",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 31,
        "Soru": "Veritabanı dizin nedir ve neden önemlidir?",
        "Cevap": "Bir veritabanı dizin, bir kitabın dizinine benzer şekilde veri almayı hızlandırır ve sorgu performansını artırır.",
        "Kategori": "Veritabanı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 32,
        "Soru": "SQL ve NoSQL veritabanları arasındaki farkları açıklayın.",
        "Cevap": "SQL veritabanları, önceden tanımlanmış bir şema ile yapılandırılmış sorgu dili kullanır; NoSQL veritabanları, esnek modellerle şema olmayan verileri depolar.",
        "Kategori": "Veritabanı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 33,
        "Soru": "Bir veritabanındaki yabancı anahtar nedir?",
        "Cevap": "Yabancı anahtar, referans bütünlüğünü sağlayarak başka bir tablodaki birincil anahtara atıfta bulunarak iki tabloyu birbirine bağlar.",
        "Kategori": "Veritabanı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 34,
        "Soru": "Veritabanı işlemlerindeki asit özelliklerini açıklayın.",
        "Cevap": "Asit: atomiklik (bölünmez işlemler), tutarlılık (tutarlı durum geçişleri), izolasyon (bağımsız işlemler), dayanıklılık (kalıcı değişiklikler).",
        "Kategori": "Veritabanı",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 35,
        "Soru": "Daha iyi performans için bir SQL sorgusunu nasıl optimize edersiniz?",
        "Cevap": "Dizinler, verimli SQL, veri almayı sınırlama, sorgu performansını analiz etme ve denormalizasyonu dikkate alarak optimize edin.",
        "Kategori": "Veritabanı",
        "Zorluk": "Kolay"
    },
    {
        "Soru Numarası": 36,
        "Soru": "Veritabanı tasarımında normalizasyon nedir?",
        "Cevap": "Normalizasyon, normalleştirme formlarını takip ederek fazlalığı azaltmak ve bütünlüğü artırmak için verileri ayrı tablolar halinde düzenler.",
        "Kategori": "Veritabanı",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 37,
        "Soru": "SQL'de iç birleştirme ve sol birleştirme arasındaki farkı açıklayın.",
        "Cevap": "İç birleştirme her iki tablodan eşleşen satırları döndürür; Sol birleştirme sol tablodan tüm satırları ve sağdan eşleşen satırları döndürür.",
        "Kategori": "Veritabanı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 38,
        "Soru": "Saklanan bir prosedür nedir ve ne zaman kullanırsınız?",
        "Cevap": "Saklanan prosedürler, tekrarlayan görevler için kullanılan ve performansı iyileştiren veri manipülasyonu ve mantık için önceden derlenmiş SQL ifadeleridir.",
        "Kategori": "Veritabanı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 39,
        "Soru": "Veritabanı denormalizasyonu nedir ve ne zaman uygundur?",
        "Cevap": "Denormalizasyon, depolama ve karmaşıklık pahasına okuma-ağır senaryolarda yararlı olan performans için fazlalık getirir.",
        "Kategori": "Veritabanı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 40,
        "Soru": "Bir ORM aracı kullanmanın avantajlarını ve dezavantajlarını tartışın.",
        "Cevap": "ORM veritabanı etkileşimlerini basitleştirir ve dil-agnostiktir. Performans ek yükünü tanıtabilir ve veritabanı özelliklerini sınırlayabilir.",
        "Kategori": "Veritabanı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 41,
        "Soru": "Belge nesne modeli (DOM) nedir?",
        "Cevap": "DOM, programlama dilleri aracılığıyla içerik, yapı ve stilin manipülasyonuna izin veren bir web sayfasının yapısının ağaç benzeri bir temsilidir.",
        "Kategori": "Web Geliştirme",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 42,
        "Soru": "HTTP ve HTTP'ler arasındaki farkı açıklayın.",
        "Cevap": "HTTP, teminatsız bir veri iletim protokolüdür; HTTPS güvenlidir, SSL/TLS kullanarak geçişte verileri şifreler.",
        "Kategori": "Web Geliştirme",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 43,
        "Soru": "CORS (Ortak Origin Kaynak Paylaşımı) nedir?",
        "Cevap": "CORS, HTTP başlıkları aracılığıyla yönetilen başka bir alandan talep edilen kaynaklara izin veren veya kısıtlayan bir güvenlik önlemidir.",
        "Kategori": "Web Geliştirme",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 44,
        "Soru": "Apache veya Nginx gibi bir web sunucusunun amacını açıklayın.",
        "Cevap": "Web sunucuları HTTP isteklerini kullanır, içerik sunar, güvenliği yönetir, yönlendirmeyi ve uygulama sunucuları için ters proxy görevi görebilir.",
        "Kategori": "Web Geliştirme",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 45,
        "Soru": "Çerez nedir ve nasıl çalışır?",
        "Cevap": "Çerezler, Web sunucusu tarafından kullanıcının bilgisayarında depolanan, oturum yönetimi, izleme ve depolama tercihleri için gönderilen verilerdir.",
        "Kategori": "Web Geliştirme",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 46,
        "Soru": "Web geliştirmede oturum nedir?",
        "Cevap": "Bir oturum, genellikle kullanıcı kimlik doğrulaması ve veri depolama için birden fazla HTTP isteği arasında durumsal bilgileri tutar.",
        "Kategori": "Web Geliştirme",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 47,
        "Soru": "Duyarlı web tasarımı kavramını açıklayın.",
        "Cevap": "Duyarlı Tasarım, CSS medya sorguları ve esnek düzenler kullanarak farklı cihazlarda ve ekran boyutlarında web içeriği işlevlerini sağlar.",
        "Kategori": "Web Geliştirme",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 48,
        "Soru": "GET ve Post istekleri arasındaki farkları açıklayın.",
        "Cevap": "İstekleri Alın Veri Alın ve URL'ye parametreler ekleyin; Gönderi İstekleri sunucuya veri göndererek, istek gövdesindeki verileri kapsar.",
        "Kategori": "Web Geliştirme",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 49,
        "Soru": "SEO'nun web geliştirmede önemi nedir?",
        "Cevap": "SEO, bir web sitesinin arama motoru sonuçlarındaki görünürlüğünü artırarak, optimize edilmiş içerik ve yapı yoluyla organik trafiği ve kullanıcının erişimini artırır.",
        "Kategori": "Web Geliştirme",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 50,
        "Soru": "Bir web tarayıcısı nasıl bir web sayfası oluşturur?",
        "Cevap": "Tarayıcılar bir DOM oluşturmak, kaynaklar getirmek, bir oluşturma ağacı oluşturmak, CSS uygulamak, düzeni hesaplamak ve ekrandaki boyayı boyamak için HTML'yi ayrıştırır.",
        "Kategori": "Web Geliştirme",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 51,
        "Soru": "Birim testi nedir ve neden önemlidir?",
        "Cevap": "Birim Testi Bireysel kod bileşenlerini değerlendirir, doğruluğunu sağlar ve erken kusur tespitini kolaylaştırır.",
        "Kategori": "Yazılım Testi",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 52,
        "Soru": "Kara kutu ve beyaz kutu testi arasındaki farkı açıklayın.",
        "Cevap": "Dahili kod bilgisi olmadan kara kutu test işlevselliği; Beyaz kutu testleri dahili kod mantığı ve yapısı.",
        "Kategori": "Yazılım Testi",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 53,
        "Soru": "Regresyon testi nedir?",
        "Cevap": "Regresyon testi, yeni kod değişikliklerinin mevcut özellikleri bozmamasını ve güncellemeler üzerindeki işlevselliği korumasını sağlar.",
        "Kategori": "Yazılım Testi",
        "Zorluk": "Kolay"
    },
    {
        "Soru Numarası": 54,
        "Soru": "Kod incelemelerinin amacını açıklayın.",
        "Cevap": "Kod İncelemeleri kusurları belirleyin, kaliteyi iyileştirin, standartları uygular ve bilgi paylaşımını kolaylaştırır.",
        "Kategori": "Yazılım Testi",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 55,
        "Soru": "Sürekli entegrasyon (CI) ve sürekli teslimat (CD) nedir?",
        "Cevap": "CI, sık kod entegrasyonu ve testi içerir; CD, testten sonra üretime otomatik olarak değişiklikler uygulayarak CI'yi genişletir.",
        "Kategori": "Yazılım Testi",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 56,
        "Soru": "Testte kod kapsamı kavramını açıklayın.",
        "Cevap": "Kod kapsamı, test edilen kodun kapsamını ölçer, test kapsamını değerlendirir ve denenmemiş alanların belirlenmesi.",
        "Kategori": "Yazılım Testi",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 57,
        "Soru": "Test durumu nedir ve bir tane nasıl yazıyorsunuz?",
        "Cevap": "Bir test durumu, hedef, adımlar ve belgelerle yapılandırılmış test koşullarını, girişleri ve beklenen sonuçları özetler.",
        "Kategori": "Yazılım Testi",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 58,
        "Soru": "Yük testi nedir ve neden gereklidir?",
        "Cevap": "Yük testi, beklenen yük koşulları altında sistem performansını değerlendirir, darboğazları ve ölçeklenebilirlik sorunlarını belirler.",
        "Kategori": "Yazılım Testi",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 59,
        "Soru": "Manuel ve otomatik testler arasındaki farkları açıklayın.",
        "Cevap": "Manuel test insan güdümlüdür; Keşif ve UX testi için uygundur. Otomatik test, tekrarlayan görevler için araçlar kullanır; Regresyon ve performans testi için uygundur.",
        "Kategori": "Yazılım Testi",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 60,
        "Soru": "Hata izleme sistemi nedir?",
        "Cevap": "Bir hata izleme sistemi, sistematik problemin işlenmesini sağlayarak yazılım geliştirmedeki sorunları günlüğe çeker, yönetir ve çözer.",
        "Kategori": "Yazılım Testi",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 61,
        "Soru": "Git nedir ve nasıl çalışır?",
        "Cevap": "GIT, kaynak kodundaki değişiklikleri izlemek ve işbirlikçi çalışmalara ve şube yönetimine izin veren dağıtılmış bir sürüm kontrol sistemidir.",
        "Kategori": "Sürüm Kontrolü",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 62,
        "Soru": "GIT ve SVN (Subversion) arasındaki farkı açıklayın.",
        "Cevap": "Git, yerel depo kopyalarıyla dağıtılır; SVN merkezileştirilir ve depo erişimi için ağ bağlantısı gerektirir.",
        "Kategori": "Sürüm Kontrolü",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 63,
        "Soru": "Birleştirme çatışması nedir ve GIT'de nasıl çözersiniz?",
        "Cevap": "Birleştirme çatışmaları farklı dallardaki değişiklikler çatıştığında meydana gelir. Dosyaları manuel olarak düzenleyerek ve sonucu taahhüt ederek çözün.",
        "Kategori": "Sürüm Kontrolü",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 64,
        "Soru": "Sürüm Kontrolünde dallanmanın amacını açıklayın.",
        "Cevap": "Dallanma, deponun diğer bölümlerini etkilemeden, özellik geliştirme ve deneylere yardımcı olmadan geliştirme çalışmasını izole eder.",
        "Kategori": "Sürüm Kontrolü",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 65,
        "Soru": "Çekme isteği (PR) nedir ve nasıl çalışır?",
        "Cevap": "PR, entegrasyondan önce kod incelemesini ve tartışmayı kolaylaştıran bir şubeden diğerine kodu birleştirme isteğidir.",
        "Kategori": "Sürüm Kontrolü",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 66,
        "Soru": "Bir ekip projesinde kod çatışmalarını nasıl ele alıyorsunuz?",
        "Cevap": "Kod çatışmalarını iletişim, dikkatli inceleme, manuel birleştirme, test ve belgelendirme çözümleri yoluyla çözün.",
        "Kategori": "Sürüm Kontrolü",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 67,
        "Soru": "Kod yeniden düzenleme nedir ve neden önemlidir?",
        "Cevap": "Yeniden düzenleme, işlevselliği değiştirmeden, sürdürülebilirliği ve kaliteyi artırmadan kod yapısını ve okunabilirliğini geliştirir.",
        "Kategori": "Sürüm Kontrolü",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 68,
        "Soru": "GitFlow gibi git dallanma stratejilerinin rolünü açıklayın.",
        "Cevap": "Gitflow, yapılandırılmış ve organize kalkınma için adlandırma kurallarını ve şube amaçlarını tanımlayarak dalları ve sürümleri düzenler.",
        "Kategori": "Sürüm Kontrolü",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 69,
        "Soru": "Git Rebase nedir ve ne zaman kullanırsınız?",
        "Cevap": "Git Rebase, daha temiz bir geçmiş için başka bir tabana taahhüt eder. Doğrusal bir proje geçmişini korumak için dikkatle kullanın.",
        "Kategori": "Sürüm Kontrolü",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 70,
        "Soru": "Dağıtılmış sürüm kontrol sistemlerinin avantajlarını tartışın.",
        "Cevap": "Dağıtılmış sistemler çevrimdışı çalışma, esnek dallanma/birleştirme, daha hızlı işlemler, fazlalık ve işbirlikçi iş akışlarına izin verir.",
        "Kategori": "Sürüm Kontrolü",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 71,
        "Soru": "Mikro hizmet mimarisi kavramını tanımlayın.",
        "Cevap": "Mikro hizmet mimarisi, her biri belirli işlevsellikten sorumlu, ölçeklenebilirliği ve bakımı teşvik eden API'ler aracılığıyla iletişim kuran küçük, bağımsız hizmetlerden oluşur.",
        "Kategori": "Sistem Tasarımı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 72,
        "Soru": "Yük dengeleyici nedir ve neden web uygulamalarında kullanılır?",
        "Cevap": "Bir yük dengeleyici, gelen trafiği sunucular arasında dağıtarak kaynak verimliliğini, arıza toleransını ve yüksek kullanılabilirliği sağlar.",
        "Kategori": "Sistem Tasarımı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 73,
        "Soru": "Web uygulamalarında önbelleklemenin önemini açıklayın.",
        "Cevap": "Önbellek, daha hızlı alım için sıklıkla erişilen verileri, Back-end yükünü azaltmak, performansı iyileştirmek ve kullanıcı deneyimini geliştirmek için mağazalar.",
        "Kategori": "Sistem Tasarımı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 74,
        "Soru": "CDN (içerik dağıtım ağı) nedir?",
        "Cevap": "CDN, coğrafi yakınlığa dayalı olarak kullanıcılara verimli bir şekilde sunmak için bir sunucu ağıdır, gecikmeyi ve yükleme sürelerini azaltır.",
        "Kategori": "Sistem Tasarımı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 75,
        "Soru": "Monolitik ve Mikro Hizmetler Mimarisinin artılarını ve eksilerini tartışın.",
        "Cevap": "Monolitik basit ama daha az ölçeklenebilir; Mikro hizmetler ölçeklenebilirlik ve esneklik sunar, ancak yönetilmesi karmaşıktır.",
        "Kategori": "Sistem Tasarımı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 76,
        "Soru": "Vatansız ve durumsal hizmet nedir?",
        "Cevap": "Vatansız hizmetler, istemci verilerini istekler arasında tutmaz; Durumsal hizmetler, oturumlar ve işlemler için yararlı olan müşteri durumunu korur.",
        "Kategori": "Sistem Tasarımı",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 77,
        "Soru": "Dağıtılmış sistemlerde Cap Thorem kavramını açıklayın.",
        "Cevap": "Cap Thorem, dağıtılmış bir sistemde, her zaman tutarlılığı, kullanılabilirliği ve bölme toleransını aynı anda garanti edemeyeceğinizi belirtir.",
        "Kategori": "Sistem Tasarımı",
        "Zorluk": "Kolay"
    },
    {
        "Soru Numarası": 78,
        "Soru": "Dağıtılmış bir veritabanında veri tutarlılığını nasıl sağlıyorsunuz?",
        "Cevap": "Güçlü tutarlılık modelleri, iki aşamalı taahhütler, iyimser eşzamanlılık kontrolü ve çatışma çözme stratejileri kullanarak tutarlılığı sağlayın.",
        "Kategori": "Sistem Tasarımı",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 79,
        "Soru": "Bir web uygulamasında ters proxy'nin rolünü açıklayın.",
        "Cevap": "Ters proxy, yük dengeleme, SSL fesih, önbellekleme ve güvenlik sağlayarak istemci isteklerini uygun sunuculara yönlendirir.",
        "Kategori": "Sistem Tasarımı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 80,
        "Soru": "Mesaj komisyoncusu nedir ve ne zaman kullanırsınız?",
        "Cevap": "Bir mesaj komisyoncusu, olay odaklı mimarilerde ve yüksek hacimli senaryolarda kullanılan eşzamansız mesajlaşma yoluyla dağıtılmış sistemlerde iletişimi kolaylaştırır.",
        "Kategori": "Sistem Tasarımı",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 81,
        "Soru": "SQL enjeksiyonu nedir ve nasıl önlenebilir?",
        "Cevap": "SQL enjeksiyonu kötü amaçlı SQL yürütmek için güvenlik açıklarından yararlanır. Parametreli sorgular, giriş doğrulaması ve en az ayrıcalık erişimini önleyin.",
        "Kategori": "Güvenlik",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 82,
        "Soru": "Siteler arası komut dosyası (XSS) kavramını açıklayın.",
        "Cevap": "XSS, kullanıcıların tarayıcıları tarafından yürütülen web uygulamalarına kötü amaçlı komut dosyaları enjekte eder. Girdi doğrulama, çıkış kodlaması ve CSP ile önleyin.",
        "Kategori": "Güvenlik",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 83,
        "Soru": "İki faktörlü kimlik doğrulama (2FA) nedir?",
        "Cevap": "2FA, iki doğrulama formu gerektirerek ekstra güvenlik ekler: bilinen bir şey (şifre) ve sahip olunan bir şey (cihaz).",
        "Kategori": "Güvenlik",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 84,
        "Soru": "Parola karma ve tuzlama işlemini açıklayın.",
        "Cevap": "Hashing, parolaları algoritmalar kullanarak karmalara dönüştürür; Tuzlama rastgelelik ekler, saldırılara karşı güvenliği artırır.",
        "Kategori": "Güvenlik",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 85,
        "Soru": "OAuth nedir ve nasıl çalışır?",
        "Cevap": "OAUTH, yetkilendirme için Access Jetonları kullanarak, kimlik bilgileri açığa çıkarmadan üçüncü taraf uygulamanın kullanıcı verilerine erişimine izin verir.",
        "Kategori": "Güvenlik",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 86,
        "Soru": "Oturum fiksasyon saldırılarına karşı nasıl korunursunuz?",
        "Cevap": "Oturum kimliklerini onaylama sonrası, öngörülemeyen kimlikler kullanarak ve kimlikleri kullanıcı kimlik doğrulamasına bağlayarak yeniden kurun.",
        "Kategori": "Güvenlik",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 87,
        "Soru": "En az ayrıcalık ve savunma ilkelerini derinlemesine açıklayın.",
        "Cevap": "En az ayrıcalık erişim haklarını sınırlar; Derinlik katmanları güvenliği. Her ikisi de saldırı yüzeylerini en aza indirir hem de fazlalık sağlar.",
        "Kategori": "Güvenlik",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 88,
        "Soru": "DDOS (Dağıtılmış Hizmet Reddi) saldırısı nedir?",
        "Cevap": "Bir DDOS saldırısı, bir hedefi trafikle boğarak kullanılamazlığa neden olur. DDOS koruması, hız sınırlama ve trafik analiziyle hafifletin.",
        "Kategori": "Güvenlik",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 89,
        "Soru": "Hassas verileri bir mobil uygulamada nasıl güvence altına alabilirsiniz?",
        "Cevap": "Dinlenme sırasında ve transit olarak şifreleyerek, güvenli kimlik doğrulamasını kullanarak ve en iyi uygulamaları takip ederek verileri güvenlidir.",
        "Kategori": "Güvenlik",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 90,
        "Soru": "API tasarımında güvenliğin önemini tartışın.",
        "Cevap": "API güvenliği, verileri korumak ve kimlik doğrulama, doğrulama, hız sınırlama ve şifreleme kullanarak yetkisiz erişimi önlemek için hayati önem taşır.",
        "Kategori": "Güvenlik",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 91,
        "Soru": "Docker nedir ve nasıl çalışır?",
        "Cevap": "Docker, bağımlılıklara sahip bir kaplama platformu ambalaj uygulamalarıdır ve sistemler arasında tutarlı ortamlar sağlar.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 92,
        "Soru": "Konteyner düzenleme kavramını açıklayın.",
        "Cevap": "Konteyner Orkestrasyonu, konteynırların dağıtımını, ölçeklendirilmesini ve yönetimini otomatikleştirir, kaynak kullanımını optimize eder ve arızaları kullanır.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 93,
        "Soru": "Kubernetes nedir ve konteyner yönetiminde neden popüler?",
        "Cevap": "Kubernetes, ölçeklenebilirliği ve topluluk desteği ile bilinen dağıtım ve yönetimi otomatikleştiren açık kaynaklı bir konteyner düzenleme platformudur.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 94,
        "Soru": "Sürekli entegrasyon ve sürekli uygulama (CI/CD) sürecini tanımlayın.",
        "Cevap": "CI/CD, kod değişikliklerini hızlı ve güvenilir bir şekilde üretime sunarak oluşturma, test ve dağıtım işlemlerini otomatikleştirir.",
        "Kategori": "DevOps",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 95,
        "Soru": "Kod (IAC) olarak altyapı nedir?",
        "Cevap": "IAC, dağıtımlarda tutarlılık, otomasyon ve Sürüm Kontrolünü sağlayarak kod kullanarak altyapı yönetir.",
        "Kategori": "DevOps",
        "Zorluk": "Kolay"
    },
    {
        "Soru Numarası": 96,
        "Soru": "Bir web uygulamasının performansını nasıl izlersiniz?",
        "Cevap": "Yanıt süreleri, kaynak kullanımı, hata oranları ve kullanıcı deneyimi hakkındaki verileri toplamak ve analiz etmek için araçları kullanarak izleyin.",
        "Kategori": "DevOps",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 97,
        "Soru": "CI/CD boru hatlarında otomatik testin önemini tartışın.",
        "Cevap": "CI/CD'deki otomatik testler, kod değişikliklerinin kusursuz olmasını, güvenilirliği artırmasını ve teslimatı hızlandırmasını sağlar.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 98,
        "Soru": "Mavi-yeşil dağıtım nedir ve ne zaman kullanırsınız?",
        "Cevap": "Mavi-yeşil dağıtım, kolay geri dönüşler için iki üretim ortamı ve güncellemeler sırasında minimum kesinti süresi arasında geçiş yapar.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 99,
        "Soru": "Ansible gibi bir yapılandırma yönetimi aracının rolünü açıklayın.",
        "Cevap": "Yapılandırma Yönetimi Araçları, yazılım ve altyapının sağlanmasını ve yönetimini otomatikleştirerek tutarlılık ve verimliliği sağlar.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 100,
        "Soru": "AWS, Azure veya Google Cloud gibi bir bulut platformu kullanmanın avantajlarını açıklayın.",
        "Cevap": "Bulut platformları ölçeklenebilirlik, maliyet verimliliği, küresel erişim ve yönetilen hizmetler sunarak operasyonel yükleri güvenlik ve uyumluluk özellikleri ile azaltır.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 102,
        "Soru": "Docker'ın bir DevOps ortamında kullanımını açıklayın.",
        "Cevap": "Docker, konteynerlerde ambalaj uygulamalarına izin verir ve farklı ortamlarda tutarlı konuşlandırmayı kolaylaştırır.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 103,
        "Soru": "Yazılım geliştirmede 'yarış koşulu' nedir?",
        "Cevap": "Bir yarış koşulu, sistemin davranışı diğer kontrol edilemeyen olayların sırasına veya zamanlamasına bağlı olduğunda meydana gelir.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 104,
        "Soru": "Bir web sitesinin yükleme süresini nasıl optimize edersiniz?",
        "Cevap": "Optimizasyonlar, HTTP isteklerini en aza indirmeyi, CDN'leri kullanma, dosyaların sıkıştırılması, önbellekleme vb.",
        "Kategori": "Front-end",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 105,
        "Soru": "SQL ve NoSQL veritabanları arasındaki fark nedir?",
        "Cevap": "SQL veritabanları yapılandırılmıştır, SQL kullanır ve karmaşık sorgular için daha iyidir. NoSQL veritabanları esnektir, iyi ölçeklendirir ve hiyerarşik veri depolama için iyidir.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 106,
        "Soru": "React'te 'devlet' kavramını açıklayabilir misiniz?",
        "Cevap": "React'teki durum, bileşenin yaşam döngüsü üzerinde değişebilecek bazı bilgiler tutan bir nesnedir.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 107,
        "Soru": "DevOps'ta sürekli entegrasyon nedir?",
        "Cevap": "Sürekli entegrasyon, kod değişikliklerinin bir yazılım projesine entegrasyonunu otomatikleştirme uygulamasıdır.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 108,
        "Soru": "Bir ikili arama algoritmasını nasıl uygularsınız?",
        "Cevap": "İkili arama, olasılıkları sadece birine daraltıncaya kadar listenin öğeyi içerebilecek kısmının yarısına tekrar tekrar bölmeyi içerir.",
        "Kategori": "Full-stack",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 109,
        "Soru": "MVC mimarisini tanımlayın.",
        "Cevap": "MVC mimarisi, uygulamayı birbirine bağlı üç bileşene ayıran model-görünüm kontrolör anlamına gelir.",
        "Kategori": "Full-stack",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 110,
        "Soru": "Mikro hizmetler nelerdir ve monolitik mimarilerden nasıl farklıdır?",
        "Cevap": "Mikro hizmetler, bir uygulamayı gevşek bir şekilde birleştirilmiş hizmetlerin bir koleksiyonu olarak yapılandıran hizmet odaklı mimari mimari tarzın bir çeşididir. Monolitik bir mimaride, tüm bileşenler birbirine bağlı ve birbirine bağlıdır.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 111,
        "Soru": "JavaScript'teki '==' ve '===' arasındaki farkı açıklayın.",
        "Cevap": "'==', tür dönüşümden sonra değerleri karşılaştırırken, '===' hem değeri hem de türü karşılaştırır.",
        "Kategori": "Front-end",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 112,
        "Soru": "Kubernetes nedir ve konteynerizasyon ile nasıl ilişkilidir?",
        "Cevap": "Kubernetes, uygulama konteynerlerinin konak kümeleri arasında dağıtım, ölçeklendirilmesi ve işlemlerini otomatikleştirmek için açık kaynaklı bir platformdur.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 113,
        "Soru": "Bir Back-end uygulamada nasıl dinlendirici bir API uygulayacağınızı açıklayın.",
        "Cevap": "RESTful bir API, HTTP rotaları (Get, Post, Put, Sil) ayarlanarak ve istekleri ve yanıtları, genellikle JSON kullanarak durumsuz bir şekilde işleyerek uygulanır.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 114,
        "Soru": "Sunucu tarafı oluşturma vs istemci tarafı oluşturmanın faydaları nelerdir?",
        "Cevap": "Sunucu tarafı oluşturma, ilk sayfa yükleme süresini ve SEO'yu geliştirirken, istemci tarafı oluşturma daha az başlangıç yükleme içeriğine sahip dinamik web siteleri için iyidir.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 115,
        "Soru": "NoSQL veritabanları, geleneksel SQL veritabanlarına kıyasla veri ölçeklendirmesini nasıl işler?",
        "Cevap": "NoSQL veritabanları genellikle daha ölçeklenebilirdir ve yapılandırılmamış verilerin işlenmesindeki esneklikleri nedeniyle büyük ölçekli uygulamalar için üstün performans sağlar.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 116,
        "Soru": "React'te kancaların kullanımını açıklayın.",
        "Cevap": "Kancalar, fonksiyon bileşenlerinden reaksiyon durumuna ve yaşam döngüsü özelliklerine girmenize izin veren işlevlerdir.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 117,
        "Soru": "Kod (IAC) olarak altyapı ve DevOps'taki önemi nedir?",
        "Cevap": "IAC, geliştirme ve dağıtım hızını artıran kod kullanarak tanımlayıcı bir modelde altyapının (ağlar, sanal makineler, yük dengeleyicileri vb.) Yönetimidir.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 118,
        "Soru": "Programlamada hatırlama sürecini açıklayın.",
        "Cevap": "Anı, pahalı işlev çağrılarının sonuçlarını saklayarak programları hızlandırmak için kullanılan bir optimizasyon tekniğidir.",
        "Kategori": "Full-stack",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 119,
        "Soru": "Microservices mimarisini kullanmanın avantajları nelerdir?",
        "Cevap": "Avantajlar arasında daha kolay ölçeklenebilirlik, teknolojinin seçilmesinde esneklik, daha iyi hata izolasyonu ve iyileştirilmiş sürekli dağıtım bulunur.",
        "Kategori": "Back-end",
        "Zorluk": "Kolay"
    },
    {
        "Soru Numarası": 120,
        "Soru": "Yazılım mühendisliğindeki sağlam ilkeleri açıklayın.",
        "Cevap": "Katı, tek sorumluluk, açık kapalı, Liskov ikamesi, arayüz ayrımı ve bağımlılık ters çevirme ilkeleri anlamına gelir ve daha sürdürülebilir, anlaşılabilir ve esnek yazılımlara yönelir.",
        "Kategori": "Full-stack",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 121,
        "Soru": "Web geliştirmede tembel yükleme nedir?",
        "Cevap": "Tembel yükleme, kritik olmayan kaynakların sayfa yükleme süresinde yüklenmesini geciktiren, başlangıç yükleme süresini ve sayfa ağırlığını azaltan bir tasarım desenidir.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 122,
        "Soru": "Dağıtılmış bir sistemde bir yük dengeleyicisinin rolünü tartışın.",
        "Cevap": "Bir yük dengeleyici, uygulamaların duyarlılığını ve kullanılabilirliğini artırmak için ağ veya uygulama trafiğini birden çok sunucu arasında dağıtır.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 123,
        "Soru": "Dizinleme veritabanı sorgu performansını nasıl geliştirir?",
        "Cevap": "Dizinleme, veritabanı tablosunun daha küçük, daha hızlı bir sürümünü etkili bir şekilde oluşturarak veri alma işlemlerini hızlandırır.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 124,
        "Soru": "JavaScript'teki olay delegasyonunu açıklayın.",
        "Cevap": "Etkinlik delegasyonu, çocuk öğeleri için belirli bir türdeki tüm olayları yönetmek için tek bir olay dinleyicisi kullanma uygulamasını ifade eder.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 126,
        "Soru": "Docker'ın bir DevOps ortamında kullanımını açıklayın.",
        "Cevap": "Docker, konteynerlerde ambalaj uygulamalarına izin verir ve farklı ortamlarda tutarlı konuşlandırmayı kolaylaştırır.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 127,
        "Soru": "Yazılım geliştirmede 'yarış koşulu' nedir?",
        "Cevap": "Bir yarış koşulu, sistemin davranışı diğer kontrol edilemeyen olayların sırasına veya zamanlamasına bağlı olduğunda meydana gelir.",
        "Kategori": "Back-end",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 128,
        "Soru": "Bir web sitesinin yükleme süresini nasıl optimize edersiniz?",
        "Cevap": "Optimizasyonlar, HTTP isteklerini en aza indirmeyi, CDN'leri kullanma, dosyaların sıkıştırılması, önbellekleme vb.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 129,
        "Soru": "SQL ve NoSQL veritabanları arasındaki fark nedir?",
        "Cevap": "SQL veritabanları yapılandırılmıştır, SQL kullanır ve karmaşık sorgular için daha iyidir. NoSQL veritabanları esnektir, iyi ölçeklendirir ve hiyerarşik veri depolama için iyidir.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 130,
        "Soru": "React'te 'devlet' kavramını açıklayabilir misiniz?",
        "Cevap": "React'teki durum, bileşenin yaşam döngüsü üzerinde değişebilecek bazı bilgiler tutan bir nesnedir.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 131,
        "Soru": "DevOps'ta sürekli entegrasyon nedir?",
        "Cevap": "Sürekli entegrasyon, kod değişikliklerinin bir yazılım projesine entegrasyonunu otomatikleştirme uygulamasıdır.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 132,
        "Soru": "Bir ikili arama algoritmasını nasıl uygularsınız?",
        "Cevap": "İkili arama, olasılıkları sadece birine daraltıncaya kadar listenin öğeyi içerebilecek kısmının yarısına tekrar tekrar bölmeyi içerir.",
        "Kategori": "Full-stack",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 133,
        "Soru": "MVC mimarisini tanımlayın.",
        "Cevap": "MVC mimarisi, uygulamayı birbirine bağlı üç bileşene ayıran model-görünüm kontrolör anlamına gelir.",
        "Kategori": "Full-stack",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 134,
        "Soru": "Mikro hizmetler nelerdir ve monolitik mimarilerden nasıl farklıdır?",
        "Cevap": "Mikro hizmetler, bir uygulamayı gevşek bir şekilde birleştirilmiş hizmetlerin bir koleksiyonu olarak yapılandıran hizmet odaklı mimari mimari tarzın bir çeşididir. Monolitik bir mimaride, tüm bileşenler birbirine bağlı ve birbirine bağlıdır.",
        "Kategori": "Back-end",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 135,
        "Soru": "JavaScript'teki '==' ve '===' arasındaki farkı açıklayın.",
        "Cevap": "'==', tür dönüşümden sonra değerleri karşılaştırırken, '===' hem değeri hem de türü karşılaştırır.",
        "Kategori": "Front-end",
        "Zorluk": "Kolay"
    },
    {
        "Soru Numarası": 136,
        "Soru": "Kubernetes nedir ve konteynerizasyon ile nasıl ilişkilidir?",
        "Cevap": "Kubernetes, uygulama konteynerlerinin konak kümeleri arasında dağıtım, ölçeklendirilmesi ve işlemlerini otomatikleştirmek için açık kaynaklı bir platformdur.",
        "Kategori": "DevOps",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 137,
        "Soru": "Bir Back-end uygulamada nasıl dinlendirici bir API uygulayacağınızı açıklayın.",
        "Cevap": "RESTful bir API, HTTP rotaları (Get, Post, Put, Sil) ayarlanarak ve istekleri ve yanıtları, genellikle JSON kullanarak durumsuz bir şekilde işleyerek uygulanır.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 138,
        "Soru": "Sunucu tarafı oluşturma vs istemci tarafı oluşturmanın faydaları nelerdir?",
        "Cevap": "Sunucu tarafı oluşturma, ilk sayfa yükleme süresini ve SEO'yu geliştirirken, istemci tarafı oluşturma daha az başlangıç yükleme içeriğine sahip dinamik web siteleri için iyidir.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 139,
        "Soru": "NoSQL veritabanları, geleneksel SQL veritabanlarına kıyasla veri ölçeklendirmesini nasıl işler?",
        "Cevap": "NoSQL veritabanları genellikle daha ölçeklenebilirdir ve yapılandırılmamış verilerin işlenmesindeki esneklikleri nedeniyle büyük ölçekli uygulamalar için üstün performans sağlar.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 140,
        "Soru": "React'te kancaların kullanımını açıklayın.",
        "Cevap": "Kancalar, fonksiyon bileşenlerinden reaksiyon durumuna ve yaşam döngüsü özelliklerine girmenize izin veren işlevlerdir.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 141,
        "Soru": "Kod (IAC) olarak altyapı ve DevOps'taki önemi nedir?",
        "Cevap": "IAC, geliştirme ve dağıtım hızını artıran kod kullanarak tanımlayıcı bir modelde altyapının (ağlar, sanal makineler, yük dengeleyicileri vb.) Yönetimidir.",
        "Kategori": "DevOps",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 142,
        "Soru": "Programlamada hatırlama sürecini açıklayın.",
        "Cevap": "Anı, pahalı işlev çağrılarının sonuçlarını saklayarak programları hızlandırmak için kullanılan bir optimizasyon tekniğidir.",
        "Kategori": "Full-stack",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 143,
        "Soru": "Microservices mimarisini kullanmanın avantajları nelerdir?",
        "Cevap": "Avantajlar arasında daha kolay ölçeklenebilirlik, teknolojinin seçilmesinde esneklik, daha iyi hata izolasyonu ve iyileştirilmiş sürekli dağıtım bulunur.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 144,
        "Soru": "Yazılım mühendisliğindeki sağlam ilkeleri açıklayın.",
        "Cevap": "Katı, tek sorumluluk, açık kapalı, Liskov ikamesi, arayüz ayrımı ve bağımlılık ters çevirme ilkeleri anlamına gelir ve daha sürdürülebilir, anlaşılabilir ve esnek yazılımlara yönelir.",
        "Kategori": "Full-stack",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 145,
        "Soru": "Web geliştirmede tembel yükleme nedir?",
        "Cevap": "Tembel yükleme, kritik olmayan kaynakların sayfa yükleme süresinde yüklenmesini geciktiren, başlangıç yükleme süresini ve sayfa ağırlığını azaltan bir tasarım desenidir.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 146,
        "Soru": "Dağıtılmış bir sistemde bir yük dengeleyicisinin rolünü tartışın.",
        "Cevap": "Bir yük dengeleyici, uygulamaların duyarlılığını ve kullanılabilirliğini artırmak için ağ veya uygulama trafiğini birden çok sunucu arasında dağıtır.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 147,
        "Soru": "Dizinleme veritabanı sorgu performansını nasıl geliştirir?",
        "Cevap": "Dizinleme, veritabanı tablosunun daha küçük, daha hızlı bir sürümünü etkili bir şekilde oluşturarak veri alma işlemlerini hızlandırır.",
        "Kategori": "Back-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 148,
        "Soru": "JavaScript'teki olay delegasyonunu açıklayın.",
        "Cevap": "Etkinlik delegasyonu, çocuk öğeleri için belirli bir türdeki tüm olayları yönetmek için tek bir olay dinleyicisi kullanma uygulamasını ifade eder.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 149,
        "Soru": "JavaScript'teki 'kapatma' kavramını açıklayın.",
        "Cevap": "Kapatma, dış değişkenlerini hatırlayan ve bunlara erişebilen bir işlevdir.",
        "Kategori": "Front-end",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 150,
        "Soru": "Docker'ın bir DevOps ortamında kullanımını açıklayın.",
        "Cevap": "Docker, konteynerlerde ambalaj uygulamalarına izin verir ve farklı ortamlarda tutarlı konuşlandırmayı kolaylaştırır.",
        "Kategori": "DevOps",
        "Zorluk": "Orta"
    },
    {
        "Soru Numarası": 151,
        "Soru": "Küresel, yüksek trafikli içerik dağıtım ağını optimize edin.",
        "Cevap": "Önbellekleme, kenar yerleri, yük dengeleme ve yönlendirme ve veri sıkıştırma optimize etme gibi stratejiler kullanın.",
        "Kategori": "Ağ",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 152,
        "Soru": "Yüksek trafikli bir web sitesi için veritabanı sorgularını optimize edin.",
        "Cevap": "Önbellekleme, veritabanı parçalanması ve verimli şema tasarımını kullanarak indeksleme, sorgu optimizasyonu, sorgu optimizasyonuna odaklanın.",
        "Kategori": "Veritabanı",
        "Zorluk": "Zor"
    },
    {
        "Soru Numarası": 153,
        "Soru": "Yüksek hacimli bir finansal işlem sistemi için bir SQL veritabanını optimize edin.",
        "Cevap": "İşlem izolasyon seviyelerine, endeksleme stratejilerine, sorgu optimizasyonuna ve veritabanı parçalarına odaklanın.",
        "Kategori": "Veritabanı",
        "Zorluk": "Zor"
    }
]